play.http.secret.key = "6784455gHJGHJ$%$#$#gjdjhdg567-436762516525121jhgdhjsd"
# a sequence of domains that have access to the websocket.
# This will check if the origin is either 'localhost' or from a domain that ends with 'screenfood.com'.
# security.origins = ["localhost", "127.0.0.1", ".screenfoodnet.com",  ".screenfood.com"]
# to disable security uncomment this line
wsocket.hosts.allowed = ["localhost:59477", "localhost:9000", "localhost:19001", "localhost:9009", "localhost:19009", "localhost:9988", "localhost:9977", "locahost:9987", "localhost:19010", "192.168.1.150:9988"]

play.i18n.langs = [ "en", "en-US"]

play.modules.enabled += "modules.ServerModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"
play.filters.enabled += "play.filters.csrf.CSRFFilter"

# Uncomment this for the most verbose Akka debugging:
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    debug {
      #receive = on
      #autoreceive = on
      #lifecycle = on
    }
  }
}


# https://www.playframework.com/documentation/latest/SecurityHeaders
# Connect to localhost:9000 for content security policy on websockets
play.filters.headers {
  contentSecurityPolicy = "connect-src 'self' ws://localhost:59477 ws://localhost:9000 ws://localhost:9009 ws://localhost:9988 ws://localhost:9987 ws://192.168.1.150:9988 ws://192.168.1.150:9977"
  frameOptions = null
  #frameOptions = "SAMEORIGIN"
}

play.filters.cors {
  pathPrefixes = ["/"]
  //allowedHttpHeaders = ["Accept", "Content-Type"]
  //allowedHttpMethods = ["GET", "POST"]
  //allowedOrigins = ["localhost:59477", "localhost:9000", "localhost:9009", "localhost:9988", "localhost:9987", "admin.sarkarijoblisting.com", "pawan.sarkarijoblisting.com", "www.sarkarijoblisting.com", "pawanweb.sarkarijoblisting.com","web.sarkarijoblisting.com", "test.sarkarijoblisting.com", "sarkarijoblisting.com", "192.168.1.150:9988"]
  //allowedOrigins = ["*"]
  allowedOrigins = null
  allowedHttpMethods = ["GET", "POST"]
  allowedHttpHeaders = null
}

# https://www.playframework.com/documentation/latest/AllowedHostsFilter
# Allow requests to localhost:9000.
play.filters.hosts {
  allowed = ["localhost:59477", "localhost:9000", "localhost:9009", "localhost:9988", "localhost:9987", "admin.sarkarijoblisting.com", "pawan.sarkarijoblisting.com", "www.sarkarijoblisting.com", "pawanweb.sarkarijoblisting.com","web.sarkarijoblisting.com", "test.sarkarijoblisting.com", "sarkarijoblisting.com", "192.168.1.150:9988"]
  #allowed = ["*"]
}

# used for the AssetsFinder API
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Play mailer
play.mailer {
  host = "localhost"
  port = 25
  mock = true
}


# Security Filter Configuration - Content Security Policy
play.filters.csp {
  CSPFilter = "default-src 'self';"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com chart.googleapis.com;"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' cdnjs.cloudflare.com;"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
}

playguard {
  filter {
    enabled = true
    global {
      bucket {
        size = 100
        rate = 100
      }
    }
  }
}

arangodb {
  hostname = "127.0.0.1"
  port = 8529
  db = "portal"
  user = "root"
  password = ""
}

cache {
  folder {
    prefix = ""
    name = "/home/pawan/workspace/pdfcache"
  }
}

elasticsearch {
  cluster {
    name = "es-docker-cluster"
    uri = "elasticsearch://localhost:9200?cluster.name=es-docker-cluster"
    port1 = 9300
    port2 = 9302
    port3 = 9303
  }
}

app.override.google.fetch="false"
app.ignore.sites.pdf=${?APP_IGNORE_SITES_PDF_LIST}
app.drivers.folder=${?APP_CHROME_DRIVER_FOLDER}
app.file.path.prefix="/download/"
app.actor.system.prefix=${?ACTOR_SYSTEM_PREFIX}
max.file.upload.size=5120

portal-context {
  fork-join-executor {
    parallelism-factor = 40.0
    parallelism-max = 400
  }
}

app {
  offset = 20
}
app.api.base.url="http://www.sarkarijoblisting.com"

#kamon {
  #environment.service = "Sajoli"
  #apm.api-key = ${?KAMON_API_KEY}
#}
